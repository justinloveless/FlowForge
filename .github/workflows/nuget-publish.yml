name: Publish NuGet Packages

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch the full Git history
          
      - name: Configure Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Determine changed projects
        id: changes
        run: |
          if git rev-parse --verify HEAD~1 >/dev/null 2>&1; then
            git diff-tree --no-commit-id --name-only -r HEAD~1 HEAD | \
            grep '^FlowForge' | awk -F'/' '{print $1}' | sort | uniq > changed_projects.txt
          else
            echo "No previous commits or a new branch. Skipping changed project detection."
            echo "" > changed_projects.txt
          fi
          echo "projects=$(cat changed_projects.txt | tr '\n' ',')" >> $GITHUB_ENV
        shell: bash

      - name: Publish changed projects
        if: env.projects != ''
        run: |
          for project in $(echo "$projects" | tr ',' '\n'); do
            echo "Publishing $project"
            cd $project
            # Ensure version is updated based on Git history
            nbgv prepare-release
            # Build the project
            dotnet build --configuration Release
            dotnet pack -o ./output --configuration Release
            for nupkg in ./output/*.nupkg; do
              dotnet nuget push "$nupkg" --api-key ${{ secrets.NUGETAPIKEY }} --source https://api.nuget.org/v3/index.json
            done
            cd -
          done
        env:
          projects: ${{ env.projects }}
